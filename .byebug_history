continue
Paperclip.paperclip_defaults
Paperclip.options
Paperclip.methods
Paperclip
Paperclip.config.hash
Paperclip.config.methods
Paperclip.config do |config| end
Paperclip.config
Paperclip
continue
Place.get(1).photo_1.exists?
Place.get(1).photo_1
Place.get(1)
Place.all.map(&:json)[0]
Place.all.map(&:json)
continue
photo_1.exists?
photo_1.methods
photo_1.url
photo_1.present?
photo_1.nil?
photo_1
continue
restart
Paperclip::Attachment.default_options
continue
new.respond_to?(:to_hash)
continue
[].to_hash
respond_to?(:to_hash)
continue
[].to_hash
continue
resource_params(req, [:name], [:cover])
continue
req.params
resource_params(req, [:name], [:cover])
continue
resource_params(req, [:name], [:cover])
resource_params(req, [:name])
resource_params(req)
[:name]|[:cover]
Place.get(id).update(resource_params(req, [:name], [:cover]))
continue
Place.get(id).update(req.params.slice(:name).merge(upload_params_for(req, :cover)))
Place.get(id).update(req.params.slice(:name).merge(upload_params_for(req, :cover)
Place.get(id).update(req.params.slice(:name).merge(upload_params_for(req, :cover))
continue
upload_params_for(req, :cover)
continue
contineu
req.params['cover'].size
req.params['cover'].bytesize
req.params['cover']
req.params['cover'].size
req.params['cover']
upload_params_for(req, :cover)
continue
continmue
req.params[:cover]
req.params['cover']
req.params
upload_params_for(req, :cover)
continue
[].method(:to_hash).source_location
['one', 'two'].to_hash
[].to_hash
filename
Tempfile.new(["RackMultipart", ::File.extname(filename)])
::File.extname(filename)
up
basename
up
basename
continue
session[:is_admin]
continue
req.params
continue
req.params
req.param
req
continue
param('password')
param
params
